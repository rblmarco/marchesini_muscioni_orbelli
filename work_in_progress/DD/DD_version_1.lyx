#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{changepage}
\usepackage{geometry}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/front_page/Logo_polimi_grande.png
	scale 40

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title

\size huge
Design Document
\end_layout

\begin_layout Author
\noindent
Guido Muscioni (mat.
 876151)
\begin_inset Newline newline
\end_inset

Marco Orbelli (mat.
 876649)
\begin_inset Newline newline
\end_inset

Paola Marchesini (mat.
 876541)
\end_layout

\begin_layout Date
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
phantom{x}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Logo.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
New brand logo.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
This document is written based on RASD document, its aim is to well specify
 the structure, both hardware and software, of the system previously defined.
 The reader of that document are developers.
 They can find in that all the main information needed to the developing
 phase, as:
\end_layout

\begin_layout Itemize
The architecture of the system;
\end_layout

\begin_layout Itemize
The general software architecture of the system;
\end_layout

\begin_layout Itemize
The most important points about what the system has to provide in runtime
 environment (Runtime view);
\end_layout

\begin_layout Itemize
Some important algorithm the system is based on;
\end_layout

\begin_layout Itemize
The design patterns;
\end_layout

\begin_layout Itemize
The components and their interfaces.
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Standard
The scope of that system, is defined in the RASD document, then, here there
 is a copy of the paragraph:
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "70col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout

\shape italic
The aim of the project is to develop a digital system for an electric car-sharin
g company, that is called PowerEnjoy.
 There are not previous system so that document will describe the requirements
 that deal with all the system that the customer wants.
\end_layout

\begin_layout Plain Layout

\shape italic
The users of PowerEnjoy system are:
\end_layout

\begin_layout Itemize

\shape italic
Client;
\end_layout

\begin_layout Itemize

\shape italic
Employee.
\end_layout

\begin_layout Plain Layout

\shape italic
Both of these users are going to have unique credentials in order to use
 the system, so they must be registered.
 
\end_layout

\begin_layout Plain Layout

\shape italic
The clients will use this system to reserve and use cars of PowerEnjoy company.
\end_layout

\begin_layout Plain Layout

\shape italic
The employees will use that system in order to know what cars need help.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definitions, Acronyms, Abbreviations 
\end_layout

\begin_layout Itemize
\noindent

\series bold
RASD
\series default
: requirements analysis and specifications document;
\end_layout

\begin_layout Itemize
\noindent

\series bold
DD
\series default
: design document;
\end_layout

\begin_layout Itemize
\noindent

\series bold
SMS
\series default
: short message service; it is a notification sent to a mobile phone, an
 SMS gateway is needed to use it;
\end_layout

\begin_layout Itemize
\noindent

\series bold
SMS GATEWAY
\series default
: it is a service which allows to send SMS via standard API;
\end_layout

\begin_layout Itemize
\noindent

\series bold
API
\series default
: application programming interface; it is a common way to communicate with
 another system;
\end_layout

\begin_layout Itemize
\noindent

\series bold
RDBMS
\series default
: Relational Data Base Management System;
\end_layout

\begin_layout Itemize
\noindent

\series bold
DB
\series default
: the database laye, r, handled by a RDBMS;
\end_layout

\begin_layout Itemize
\noindent

\series bold
UI:
\series default
 User Interface;
\end_layout

\begin_layout Itemize
\noindent

\series bold
APPLICATION SERVER:
\series default
 the layer which provides the application logic and interacts with the DB
 and with the front-ends;;
\end_layout

\begin_layout Itemize
\noindent

\series bold
BACK-END:
\series default
 term used to identify the Application server;
\end_layout

\begin_layout Itemize
\noindent

\series bold
FRONT-END:
\series default
 the components which use the application server services,namely the web
 front-end and the mobile applications;
\end_layout

\begin_layout Itemize
\noindent

\series bold
WEB SERVER:
\series default
 the component that implements the web-based front-end.
 It interacts with the application server and with the users’ browsers;
\end_layout

\begin_layout Itemize
\noindent

\series bold
SOA:
\series default
 Service-oriented Architecture;
\end_layout

\begin_layout Itemize
\noindent

\series bold
JDBC:
\series default
 Java DataBase Connectivity;
\end_layout

\begin_layout Itemize
\noindent

\series bold
JPA:
\series default
 Java Persistence API;
\end_layout

\begin_layout Itemize
\noindent

\series bold
EJB: 
\series default
Enterprise JavaBean;
\end_layout

\begin_layout Itemize
\noindent

\series bold
ACID:
\series default
 Atomicity, Consistency, Integrity and Durability;
\end_layout

\begin_layout Itemize
\noindent

\series bold
MVC:
\series default
 model view controller;
\end_layout

\begin_layout Itemize
\noindent

\series bold
URL:
\series default
 uniform resource locator;
\end_layout

\begin_layout Itemize
\noindent

\series bold
UX: 
\series default
user experience design;
\end_layout

\begin_layout Itemize
\noindent

\series bold
BCE:
\series default
 business controller entity;
\end_layout

\begin_layout Itemize

\series bold
CSS3
\series default
: Cascading Style Sheets (CSS) is used to define the style of web pages
 written in html;
\end_layout

\begin_layout Itemize

\series bold
PHP
\series default
: Hypertext preprocessor is a scripting language, designed for the developing
 of dynamic web pages;
\end_layout

\begin_layout Itemize

\series bold
SQL
\series default
: Structured Query Language is a language used to query a SQL DBMS;
\end_layout

\begin_layout Itemize

\series bold
MySQL
\series default
: is a relational database management system RDBMS with SQL as query language;
\end_layout

\begin_layout Itemize

\series bold
JS
\series default
: JavaScript is the programming language of HTML and the Web;
\end_layout

\begin_layout Itemize

\series bold
HTML
\series default
: is a computer language devised to allow website creation;
\end_layout

\begin_layout Itemize

\series bold
HTTP
\series default
: Hyper Text Transfer Protocol is the comunication protocol with the net;
\end_layout

\begin_layout Itemize

\series bold
HTTPs
\series default
: is a protocol for secure communication over the network;
\end_layout

\begin_layout Itemize

\series bold
JSON
\series default
: JavaScript Object Notation is a way to store information in an organized
 and easy to access manner;
\end_layout

\begin_layout Itemize

\series bold
REST
\series default
 or
\series bold
 RESTful
\series default
: REpresentational State Transfer is an architectural style and an approach
 to communications (often used in the development of Web services);
\end_layout

\begin_layout Itemize

\series bold
InnoDB
\series default
: is a storage engine for MySQL, that can manage the foreign keys;
\end_layout

\begin_layout Itemize

\series bold
JAX-RS
\series default
: Java API for RESTful Web Services is a Java programming language API that
 provides support in creating web services according to the Representationl
 Satte Transfer (REST) architectural patter;
\end_layout

\begin_layout Itemize

\series bold
OS
\series default
: Operating System;
\end_layout

\begin_layout Itemize

\series bold
DMZ
\series default
: in computer security, a DeMilitarized Zone, is a physical or logical subnetwor
k delimitated by firewall;
\end_layout

\begin_layout Itemize

\series bold
RACS
\series default
: Reliable Array of Cloned Services;
\end_layout

\begin_layout Itemize

\series bold
ODBC
\series default
: Open DataBase Connectivity is a standard application programming interface
 (API) for accessing database management systems (DBMS).
\end_layout

\begin_layout Subsection
Reference Documents
\end_layout

\begin_layout Itemize
Specification document: Assignments AA 2016-2017;
\end_layout

\begin_layout Itemize
Examples documents:
\end_layout

\begin_deeper
\begin_layout Itemize
Sample-Design-Deliverable-Discussed-on-Nov.-2.
\end_layout

\end_deeper
\begin_layout Itemize
PayPal documentation (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://developer.paypal.com/docs/
\end_layout

\end_inset

 and 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.paypal.com/it/webapps/mpp/merchant
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
General documentations about SMS gateway provider (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.smsglobal.com/business-sms/
\end_layout

\end_inset

 and 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.trendoo.it/invio-sms.html
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
Jersey framework documentation (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://jersey.java.net/documentation/latest/user-guide.html
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
PhoneGap documentation (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://docs.phonegap.com/
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
W3School website (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.w3schools.com/
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
Amazon clod services documentation (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://aws.amazon.com/it/
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
General API documentation of mobile OS.
\end_layout

\begin_layout Subsection
Document Structure
\end_layout

\begin_layout Paragraph
Section 1: Introduction
\end_layout

\begin_layout Standard
This section provides general informations about design, including acronymus
 or abbreviation used in the document, documents used to develop it and
 tools used to help us.
\end_layout

\begin_layout Paragraph
Section 2: Architectural design
\end_layout

\begin_layout Standard
This section shows the main architectural choices about physical organization
 of the system, software components used and their relationship.
 This section will also focuses on design choices, styles and pattern used.
\end_layout

\begin_layout Paragraph
Section 3: Algorithm design
\end_layout

\begin_layout Standard
This section will presents and points out in detail the main algorithms
 of our project, designed to implement in the best way the functionalities
 proposed.
\end_layout

\begin_layout Paragraph
Section 4: User interface design
\end_layout

\begin_layout Standard
This section shows how the most imporant user interfaces will look, underlining
 what the users or the employees could do, through UX and BCE diagrams.
\end_layout

\begin_layout Paragraph
Section 5: Requirements traceability
\end_layout

\begin_layout Standard
This section shows how the requirements in the RASD are satisfied by the
 design choices of the DD.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Architectural design
\end_layout

\begin_layout Subsection
Overview
\begin_inset CommandInset label
LatexCommand label
name "subsec:layer section"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \thinspace{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Architecture/Architecture.pdf
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Overview architecture.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The system of PowerEnjoy service is composed by a three layers architecture:
\end_layout

\begin_layout Itemize

\series bold
Presentation layer
\series default
: it is the layer that deals with presentation logic, in other way the interacti
on with the users.
 So it contains the interfacing and rendering procedures of all system informati
on.
 That layer is also known as application front-end;
\end_layout

\begin_layout Itemize

\series bold
Application layer
\series default
: it is the layer that handles all the system functions.
 It also queries the database, in order to infer information, needed to
 build web pages;
\end_layout

\begin_layout Itemize

\series bold
Data layer
\series default
: it takes care of information management, using a DBMS software.
\end_layout

\begin_layout Standard
In order to support that layer division, the system will be develop following
 a multi-tier architecture based on four tiers.
\end_layout

\begin_layout Itemize

\series bold
Tiers of presentation layer
\series default
:
\end_layout

\begin_deeper
\begin_layout Itemize
Client tier: represented by user's broswer or mobile application;
\end_layout

\begin_layout Itemize
Web server tier: That tier will answer to the HTTP request (GET, POST, etc...)
 from users or PowerEnjoy intranet.
 So it interacts with the script engine (JS, etc...) to create dynamic web
 pages, and with application server to retrieve data required in order to
 build pages with correct information.
 It also will grant access to static objects and pages.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Application server
\series default
 (tier of application layer): it is the middle tier of the system.
 It implements the business logic, following the rules defined by the company.
 That tier have a direct link to the database server;
\end_layout

\begin_layout Itemize

\series bold
Database server
\series default
 (tier of data layer): it is composed by a DBMS that permit ACID propriety
 of data, and it allows application server to make SQL queries.
\end_layout

\begin_layout Standard
Client tier allows the general user (employee and user) of the system to
 interact with the functionality of PowerEnjoy service.
 The users can access to the system with a common web broswer, or with the
 mobile application.
 The web server contains the structure of the web pages, and it answers
 to the user's requests, generating the pages, using script engine, with
 the proper data, received from the application server.
 There are two ways of interaction between users and system.
 The first one with a modern and up to date web broswer.
 The second one is represetend by the mobile application, which is completely
 derivated from the website, using Phonegap service to transform it in an
 executable file for all the mobile OS nowdays available.
 Due to that, the website will be developed following the principles of
 responsive pages, in order to reduce the amount of code, and increase the
 product quality attributes (as maintainability, performance, portability,
 etc...).
 Furthermore, a responsive design will give to the users of PowerEnjoy system
 a service easy to use and always familiar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Architecture/Architecture_firewall.pdf
	scale 73
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Physical architecture of the system.
 
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "physical architecture"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "physical architecture"

\end_inset

 is represented the physical structure of the system.
 The Web Server is organized int two different physical devices as the Applicati
on server.
 That structure is called 
\begin_inset Quotes eld
\end_inset

Server Farm
\begin_inset Quotes erd
\end_inset

, that is a typical distributed architecture, that improves the management
 of difficult works and, in particular, the availability qualities.
 In actual fact, a load balancing system will be used to split the works
 in these two physical servers.
 The two server farms in that architecture follow the design principles
 of 
\begin_inset Quotes eld
\end_inset

Cloning
\begin_inset Quotes erd
\end_inset

, so they used the RACS policy.
 With that, the two servers of each farm can manage the same set of functions
 required by the system.
 In conclusion, if a server goes down, the other server can mantain the
 service active.
 In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "availability analysis"

\end_inset

 there is a general analysis of the value of availability of the system,
 using that architectural pattern.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "physical architecture"

\end_inset

 points out also that system architecture deals with a cloud service; in
 actual fact periodically, the application server will do a backup in order
 to retrieve data if something bad happen to the database server.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Availability/diagram_availability.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Availability analysis.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "availability analysis"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Supposing that 
\begin_inset Formula $A_{i}$
\end_inset

 is the availability of one of system's servers.
 The total avilability, using that architectural pattern, is express by
 that formula:
\end_layout

\begin_layout Standard

\series bold
\size larger
\begin_inset Formula 
\[
A=1-\stackrel[i=1]{n}{\prod}(1-A_{i})
\]

\end_inset


\end_layout

\begin_layout Standard
So 
\begin_inset Formula $A$
\end_inset

 is incremented when the servers are incremented.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Hight Level Component View
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \thinspace{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Component_Deployement/high_level_compoinents.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
High level component diagram.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This diagrams shows the interaction between the main component of the system.
 The client could starts the comunication with the system using the mobile
 application or the webpage, the employee is conneted with the system of
 the headquarter through the mobile application.
 The headquarter contains the core of the system and the database with the
 most important informations of the clients of Power Enjoy.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{bottom=2cm, top=1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Component View
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Component_Deployement/component_diagram.pdf
	scale 34
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Component view diagram.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Dispatcher
\end_layout

\begin_layout Standard
The dispatcher is a component devoted to forward requests received from
 the user to the right controller.
 It is capable to understand what it has to do, according to informations
 it received.
 It does not do anything excepts forwarding, for this reason it can be considere
d a mediator between the 
\begin_inset Quotes eld
\end_inset

smarter
\begin_inset Quotes erd
\end_inset

 part of the application server and humans.
\end_layout

\begin_layout Paragraph
Payment controller
\end_layout

\begin_layout Standard
This controller computes requests about payment.
 The dispatcher sends to it requests about payments of the rides or other
 services provided by Power Enjoy.
 This controller comunicates with the external safe system payments (in
 our case PayPal).
 It comunicates with the dispatcher.
\end_layout

\begin_layout Paragraph
Car controller
\end_layout

\begin_layout Standard
This controller receives requests that need to be satisfied working on the
 physical car system.
 It manages reqeusts about open or close the car or, at the same time, it
 sends information if sensors on the car releaved something to be analyzed.
 It comunicates with the dispatcher.
\end_layout

\begin_layout Paragraph
Ride controller
\end_layout

\begin_layout Standard
This controller manages requests about the ride.
 It can creates a ride, finisches it or computes the final price.
 It comunicates with the dispatcher.
\end_layout

\begin_layout Paragraph
Account contoller
\end_layout

\begin_layout Standard
This controller manage requests about accounts registered in the system
 (both user and employee).
 Through this controller an authenticated human could modify his/her credentials
 or simply visualizes them.
 It comunicates with the dispatcher.
\end_layout

\begin_layout Paragraph
List controller
\end_layout

\begin_layout Standard
This controller is used when an autenticated human ask for a set or, in
 general, a list of car for every reason.
 It is used to create the list of available car or the list of cars which
 needs attention.
 It comunicates with the dispatcher.
\end_layout

\begin_layout Paragraph
Reservation controller 
\end_layout

\begin_layout Standard
This controller manage the reservation of cars.
 It is 
\begin_inset Quotes eld
\end_inset

called
\begin_inset Quotes erd
\end_inset

 by the dispatcher when the user wants to reserve a car and, one reserved,
 to set the 
\begin_inset Quotes eld
\end_inset

Expire time
\begin_inset Quotes erd
\end_inset

 and close the reservation.
 It comunicates with the dispatcher.
\end_layout

\begin_layout Paragraph
Model (package)
\end_layout

\begin_layout Standard
This package contains all the main classes which are modified by the controller.
 Their connection with the database is not represented in the component
 viw.
\end_layout

\begin_layout Paragraph
Notification dispatcher
\end_layout

\begin_layout Standard
This dispacher forwarding the requests about notification to the right gateway.
\end_layout

\begin_layout Paragraph
Mail gateway
\end_layout

\begin_layout Standard
This gateway manages the mail entering and leaving the application server.
\end_layout

\begin_layout Paragraph
Sms gateway
\end_layout

\begin_layout Standard
This gateway manages the sms entering and leaving the application server.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{top=2cm, bottom=2cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Deployment View
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Component_Deployement/deployement_diagram.pdf
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Deployment diagram of the system.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In that diagram is described the physical allocation of the layer described
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:layer section"

\end_inset

.
 Four tier is needed in order to build the system, althought a different
 physical architecture could merge the Web Server tier and the Application
 Server tier in a single tier.
 
\end_layout

\begin_layout Standard
Four tier architecture improves the security of the system, in actual fact
 with four physical devices is possible to place between these a firewall
 that considerably improves the security.
\end_layout

\begin_layout Standard
The devices allocated for the Web Server and the Application Server are
 in the reality two, the reason of that choice is exposed in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:layer section"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{left=1cm, right=1cm, top=1cm, bottom=2cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Runtime View
\end_layout

\begin_layout Subsubsection
Start the ride - Sequence diagram
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Diagrams/Sequence/start_the_ride_sequence_diagram_nowebserver.pdf
	scale 40
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Start the ride (Sequence Diagram).
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
This sequence diagram shows how to an an user (an identified human) could
 reserve a car.
 Tapping or selecting the option 
\begin_inset Quotes eld
\end_inset

Look for car nearby
\begin_inset Quotes erd
\end_inset

, he/she send his position (inserted manually o automatically sent) to the
 system.
 Once arrived to the dispacher, the request is send to the right controller
 (in this case the 
\begin_inset Quotes eld
\end_inset

List controller
\begin_inset Quotes erd
\end_inset

) which ask to the database a list of car available for reservation.
 The user can now visualize the states of these car and chose one of these.
 He/she reserved the car chosen with the suiteted option and, through the
 
\begin_inset Quotes eld
\end_inset

Reservation controller
\begin_inset Quotes erd
\end_inset

 a reservation of this car is created and also, throght the 
\begin_inset Quotes eld
\end_inset

Car controller
\begin_inset Quotes erd
\end_inset

, the phase of this car is put on 
\begin_inset Quotes eld
\end_inset

Reserved
\begin_inset Quotes erd
\end_inset

.
 When the user reachs the car, he/she opens it and the phase of the car
 is now 
\begin_inset Quotes eld
\end_inset

Used
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{left=1cm, right=1cm, top=1.5cm, bottom=2cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Finish the ride - Sequence diagram
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Sequence/finish_the_ride_sequence_diagram_nowebserver.pdf
	scale 45
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Finish the ride (Sequence Diagram).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
This sequence diagram show how to an user (an idenified human) finish his/her
 ride.
 The user turn off the car and then, on the user terminal (in this case
 the screen of the car), he/she selects the option 
\begin_inset Quotes eld
\end_inset

Finish the ride
\begin_inset Quotes erd
\end_inset

.
 The request arrives to the dispatcher and it forwards the request to the
 
\begin_inset Quotes eld
\end_inset

Ride controller
\begin_inset Quotes erd
\end_inset

 which works on the database to updates tables in order to 
\begin_inset Quotes eld
\end_inset

close
\begin_inset Quotes erd
\end_inset

 the ride.
 When the user sees on the user terminal (the screen of the car) that the
 ride is finished, he/she gets out the car and it's sensor send to the system
 a request to close the car.
 The user has one minute to plug the car, after this time expires the applicatio
n server proceeds to compute the final cost of the ride, eventually applying
 discounts, accordig to the various options chosen for this ride.
 The system finaly send a mail with the bill of the ride to the user.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{bottom=3cm, top=3cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
List of car - Sequence diagram
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{adjustwidth}{-0.5cm}{-2cm}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Sequence/list_of_the_car_sequence_diagram_nowebserver.pdf
	scale 50
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
List of car - Employee (Sequence Diagram).
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{adjustwidth}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
This sequence diagram show the utility of the list of car for an employee.
 When the employee arrives at work, he/she has to see the list of car which
 he/she has to take car in the day.
 He/she sends his request to the system and the dispatcher forwards the
 request to the 
\begin_inset Quotes eld
\end_inset

List controller
\begin_inset Quotes erd
\end_inset

, which extracts from the database some cars that need to be checked.
 He/she takes car of the car and then, according to the problems he/she
 has detected during his/her works, he/she changes the state of the car,
 sending the request to the application server.
 The 
\begin_inset Quotes eld
\end_inset

Car controller
\begin_inset Quotes erd
\end_inset

 changes the state of the car in the database and the 
\begin_inset Quotes eld
\end_inset

List of car
\begin_inset Quotes erd
\end_inset

 of the employee is updated.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{bottom=3cm, top=2cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Component Interface
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{adjustwidth}{-2cm}{-2cm}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Data_model/Data_model.pdf
	scale 53

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Entity-Relationship diagram (with UML notation).
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{adjustwidth}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Entities and relationships of interest for the application on the basis
 of the diagram of classes present in the RASD have been identified.
 The conceptual design of the database is illustrated by the E-R diagram
 in figure below.
 Foreign key constraints and triggers are not used: the dynamic behaviour
 of the data is handled entirely by the Java Persistence API in the Business
 Application tier.
 
\end_layout

\begin_layout Standard
\noindent
The entities and relationships are:
\end_layout

\begin_layout Itemize

\series bold
Reservation
\series default
;
\end_layout

\begin_layout Itemize

\series bold
User
\series default
;
\end_layout

\begin_layout Itemize

\series bold
Ride
\series default
: entity identified by a unique ID auto-increment, and has the attribute
 startingLongitude and startingLatitude (for the initial position) and the
 finalLongitude and finalLatitude (for the final position) and lastly the
 numberOfPassengers.
 With this information from the ride the system can compute the final price
 and the related discounts, of course only the higher discount among those
 available will be applied;
\end_layout

\begin_layout Itemize

\series bold
Payment Information
\series default
: this entity related with the corresponding user (through the “InformationForPa
ymet” relation) allow the user to have multiple payment information instead
 of only one;
\end_layout

\begin_layout Itemize

\series bold
Car
\series default
;
\end_layout

\begin_layout Itemize

\series bold
Phase
\series default
: every car, with the “phaseOfCar” relation, is associated exactly to one
 phase.
 A phase represent the state of the car so if, in the future, the system
 need to specify a new state it can simply add a new id with its type;
\end_layout

\begin_layout Itemize

\series bold
Historical Work
\series default
: entity identified by a unique ID auto-increment which represents a single
 work done by a pair of worker on one car.
 So using a GROUP BY on a employee or on one car the system will return
 respectively the entire works done by an employee or the all work done
 on one car;
\end_layout

\begin_layout Itemize

\series bold
List
\series default
;
\end_layout

\begin_layout Itemize

\series bold
Special Area
\series default
: is identified uniquely by its latitudine and its longitudine (that is
 its center ).
 The system with the “radius” attribute can verify if a position is in that
 special area or not.
 Lastly the attribute plugs which is an integer that detrmine the number
 of plugs in the special area.
 When the system need to know the number of free plugs in a specific special
 area (in order to compute the available special area for the “money saving
 option”) a simple inspection of the relationship between the cars and the
 special area is needed;
\end_layout

\begin_layout Itemize

\series bold
Safe Area External Point
\series default
: every entity has a latitudine and longitudine which determine a unique
 position that is a vertex of the polygon.
 Moreover each entity has a “order” attribute which is an integer that represent
 the order of the vertices.
 See the algorithm in the section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithm-Design"

\end_inset

;
\end_layout

\begin_layout Itemize

\series bold
Employee
\series default
;
\end_layout

\begin_layout Itemize

\series bold
Phone
\series default
.
\end_layout

\begin_layout Subsection
Selected Architectural Styles And Patterns
\end_layout

\begin_layout Subsubsection
Protocols
\end_layout

\begin_layout Paragraph
JDBC with ODBC
\end_layout

\begin_layout Standard
This protocolos is used to manage the connection between database and Applicatio
n server.
\end_layout

\begin_layout Paragraph
RESTful API and JSON 
\end_layout

\begin_layout Standard
Use to manage the connection with the application server.
 because the application server is a JavaEE server, in order to give to
 that server JSON and REST capabilities Jersey framework will be installed.
 
\end_layout

\begin_layout Subsubsection
Design Patterns
\end_layout

\begin_layout Paragraph
MVC with Observable/Observer
\end_layout

\begin_layout Standard
This is the main pattern used in PowerEnjoy system.
 Observable/Observer pattern is used in order to simplify the developing
 of MVC system, and to improve the maintainability.
 In actual fact we can add in future more feature, that perhaps requires
 the same notification that is currently used in the system.
\end_layout

\begin_layout Paragraph
Visitor 
\end_layout

\begin_layout Standard
This pattern is used to make the ListController very dynamic.
 Infact thanks to that pattern the addiction of new type of List is easier
 (go to section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithm-Design"

\end_inset

 to get more specific information about the used of that pattern).
\end_layout

\begin_layout Paragraph
State
\end_layout

\begin_layout Standard
Used in order to manage the phase of cars.
 In actual fact it is easier to extend the possible phases of a car, and
 also modify the possible behaviour of it.
 
\end_layout

\begin_layout Paragraph
Adapter 
\end_layout

\begin_layout Standard
Used in order to make the JavaEE Application server work with Jersey framework
 and consequently with RESTful and JSON, needed in order to build the mobile
 application using PhoneGap.
\end_layout

\begin_layout Paragraph
Client-Server
\end_layout

\begin_layout Standard
The Client-Server pattern is strogly used in our system.
 It is based on thin clients, represented by the mobile application used
 by users and employees, and the client's web browser.
 The client sends requests to the application server in the headquarter.
 This pattern has been chosen because is scalable (the application can interact
 with an hight number of clients) and fast because different asymmetric
 protocol are use to answer to the clients.
\end_layout

\begin_layout Subsection
Other Design Decision
\end_layout

\begin_layout Standard
Bootstrap 3 is the framework that allows to develop a responsive website
 without create new script function needed to make webpages dinamically
 change based on the dimension and resolution of the screen.
\end_layout

\begin_layout Standard
\noindent
GoogleMap API location service will be used in order to integrate the system
 with a map service.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Algorithm Design
\begin_inset CommandInset label
LatexCommand label
name "sec:Algorithm-Design"

\end_inset


\end_layout

\begin_layout Standard
In this section there are the prototypes of some critical algorithms of
 the system.
 
\end_layout

\begin_layout Subsection
ListController implementation
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Algorithms/Visitor/all.java.pdf

\end_inset


\end_layout

\begin_layout Standard
The ListController is used to create all the lists of the system in a dynamic
 way.
 It is implemented with a visitor pattern because, in this way, new lists
 could be added without modifying the system but only adding another implementat
ion of the ListCreator visitable object.
 Once the controller received a request, the right class is called and the
 list is generated according to the implementation of the methods of the
 visitor interface.
 
\end_layout

\begin_layout Subsection
Safe Position implementation
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Algorithms/position/new 1.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
This algorithm checks whether a point belongs to a polygon.
 So it is used to check whether a given point (uniquely determined by its
 latitude and its longitude) belongs for example to a safe area.
 
\end_layout

\begin_layout Itemize
\noindent
Fisrt step: tracing a halfline from the starting point from p;
\end_layout

\begin_layout Itemize
\noindent
Second step: calculate how many sides of the polygon intersect this half-line.
 The “result” variable contains the number of intersections;
\end_layout

\begin_layout Itemize
\noindent
Third step: if the number of intersections is even the point is outside
 the polygon otherwise (if odd) is internal.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Modify user account implementation
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Algorithms/modify/AccountController.java.pdf

\end_inset


\end_layout

\begin_layout Standard
The AccountController is realized with the overloading of methods: different
 methods have different signatures and, according to the parameters that
 has received, they have different instructions to execute.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
User Interface Design
\end_layout

\begin_layout Subsection
UX diagrams
\end_layout

\begin_layout Standard
In that part of the document is shown what the user interface has to provide
 in PowerEnjoy system.
 There are four diagrams, one for each part of the interaction between general
 users and the system.
 To see how the graphical interfaces should be in the real application go
 to the mockups section of previous RASD document, in actual fact that diagrams
 are a complete trasposition of that interface examples.
\end_layout

\begin_layout Subsubsection
Home page interface
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{adjustwidth}{-2.2cm}{}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Graphics
	filename Diagrams/UX/home_signUp_signIn_Discover.pdf
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Home navigation - UX.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{adjustwidth}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{top=3cm, bottom=3cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Interface of the user
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/UX/home_lookFor_user.pdf
	scale 46

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
User navigation - UX.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interface of the employee
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/UX/home_list_employee.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Employee navigation - UX.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Screen of car interface
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/UX/scree_of_car.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screen of car navigation - UX.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{top=3cm, bottom=3cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
BCE diagrams
\end_layout

\begin_layout Standard
Here there are four BCE diagrams that are extreamly connected to the UX
 diagrams mentioned before.
 In actual fact, in the diagram are also defined the correspondence between
 boundary and screen.
 Due to the large use of MVC pattern, BCE diagrams is needed in order to
 show how the system's components have to communicate and work together.
 In actual fact, all control tables in the diagrams will become a real controlle
r class of PoweEnjoy system, and all method defined in the entity tables
 must be provided by application server.
\end_layout

\begin_layout Subsubsection
Home BCE
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/BCE/BCE_first_page.pdf
	scale 40
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Home - BCE.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newgeometry{top=3cm, bottom=3cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
User BCE
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/BCE/BCE_user.pdf
	scale 40
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
User - BCE.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Employee BCE
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/BCE/BCE_employee.pdf
	scale 40
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screen of car navigation - UX.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Screen of car BCE
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/BCE/BCE_screen_of_car.pdf
	scale 43
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screen of car - BCE.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Requirements traceability 
\end_layout

\begin_layout Standard
All the decisions in the design of this project have been taken following
 functional and non-functional requirements writtend in the RASD.
 The list under maps the requirements and goals contained in specific sections
 of the RASD to the components in the Design Document which will assure
 its fulfillment.
\end_layout

\begin_layout Itemize
[E1] Allows the employee to log in the system, by app or website 
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\end_deeper
\begin_layout Itemize
[E2] Allows the employee to put the car in unavailable mode 
\end_layout

\begin_deeper
\begin_layout Itemize
Car Controller 
\end_layout

\end_deeper
\begin_layout Itemize
[E3] Allows the employee to know what car he/she has to take care 
\end_layout

\begin_deeper
\begin_layout Itemize
List Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U1] Allows user to create an account 
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U2] Allows user to log in the System, by application or website 
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\begin_layout Itemize
Mobile application and website
\end_layout

\end_deeper
\begin_layout Itemize
[U3] Allows user to modify his/her credentials
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U4] Allows user to look for cars nearby 
\end_layout

\begin_deeper
\begin_layout Itemize
Reservation Controller
\end_layout

\begin_layout Itemize
List Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U5] Allows user to reserve a car 
\end_layout

\begin_deeper
\begin_layout Itemize
Reservation Controller
\end_layout

\begin_layout Itemize
Car Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U6] Allows user to send a request for opening the car 
\end_layout

\begin_deeper
\begin_layout Itemize
Mobile application
\end_layout

\begin_layout Itemize
Car Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U7] Allows user to enable the money saving option 
\end_layout

\begin_deeper
\begin_layout Itemize
Ride controller
\end_layout

\begin_layout Itemize
List controller
\end_layout

\end_deeper
\begin_layout Itemize
[U8] Allows user to finish his/her ride and visualize the information about
 it 
\end_layout

\begin_deeper
\begin_layout Itemize
Screen of Car
\end_layout

\begin_layout Itemize
Ride Controller
\end_layout

\begin_layout Itemize
Car Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U9] Allows user to view the special parking area in the map 
\end_layout

\begin_deeper
\begin_layout Itemize
Screen of car 
\end_layout

\begin_layout Itemize
List Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U10] Allows user to pay for the ride
\end_layout

\begin_deeper
\begin_layout Itemize
Payment Controller
\end_layout

\begin_layout Itemize
Ride Controller
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Appendices
\end_layout

\begin_layout Subsection
Used Tools
\end_layout

\begin_layout Itemize
Microsoft Visio 2016: for all the diagrams in that document (as UX, Component,
 etc...);
\end_layout

\begin_layout Itemize
Lyx document processor: to write all the document;
\end_layout

\begin_layout Itemize
Notepad ++: to write the prototypes of the algorithms;
\end_layout

\begin_layout Itemize
SourceTree: used as GitHub manager;
\end_layout

\begin_layout Itemize
GitHub: used to manage the shared building process of that document.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Hours Of Work
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Day
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guido Muscioni
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marco Orbelli
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Paola Marchesini
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28/11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29/11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30/11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11/12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
total
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
38
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
39
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Changelog
\end_layout

\begin_layout Itemize
version 2.1
\end_layout

\begin_deeper
\begin_layout Itemize
fix component diagram, Map Gateway added;
\end_layout

\begin_layout Itemize
fix Finish the ride sequence diagram.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\end_body
\end_document
