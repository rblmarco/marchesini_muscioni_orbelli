#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{changepage}
\usepackage{geometry}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/front_page/Logo_polimi_grande.png
	scale 40

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title

\size huge
Design Document
\end_layout

\begin_layout Author
\noindent
Guido Muscioni (mat.
 876151)
\begin_inset Newline newline
\end_inset

Marco Orbelli (mat.
 876649)
\begin_inset Newline newline
\end_inset

Paola Marchesini (mat.
 876541)
\end_layout

\begin_layout Date
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
phantom{x}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Logo.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
New brand logo.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
This document is written based on RASD document, its aim is to well specify
 the structure, both hardware and software, of the system previously defined.
 The reader of that document are developers.
 They can find in that all the main information needed to the developing
 phase, as:
\end_layout

\begin_layout Itemize
The architecture of the system;
\end_layout

\begin_layout Itemize
The general software architecture of the system;
\end_layout

\begin_layout Itemize
The most important points about what the system has to provide in runtime
 environment (Runtime view);
\end_layout

\begin_layout Itemize
Some important algorithm the system is based on;
\end_layout

\begin_layout Itemize
The design patterns;
\end_layout

\begin_layout Itemize
The components and their interfaces.
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Standard
The scope of that system, is defined in the RASD document, than, here there
 is a copy of the paragraph:
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "70col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\shape italic
The aim of the project is to develop a digital system for an electric car-sharin
g company, that is called PowerEnjoy.
 There are not previous system so that document will describe the requirements
 that deal with all the system that the customer wants.
\end_layout

\begin_layout Plain Layout

\shape italic
The users of PowerEnjoy system are:
\end_layout

\begin_layout Itemize

\shape italic
Client;
\end_layout

\begin_layout Itemize

\shape italic
Employee.
\end_layout

\begin_layout Plain Layout

\shape italic
Both of these users are going to have unique credentials in order to use
 the system, so they must be registered.
 
\end_layout

\begin_layout Plain Layout

\shape italic
The clients will use this system to reserve and use cars of PowerEnjoy company.
\end_layout

\begin_layout Plain Layout

\shape italic
The employees will use that system in order to know what cars need help.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definitions, Acronyms, Abbreviations
\end_layout

\begin_layout Subsection
Reference Documents
\end_layout

\begin_layout Subsection
Used Tools
\end_layout

\begin_layout Subsection
Document Structure
\end_layout

\begin_layout Section
Architectural design
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \thinspace{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Diagrams/Architecture/Architecture.svg
	scale 27

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Overview architecture.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
<TODO: parlare dell'implementazione di un quarto tier adibito alla business
 logic.
 CLOUD?>
\end_layout

\begin_layout Standard
The system of PowerEnjoy service is composed by a three layer architecture:
\end_layout

\begin_layout Itemize
Presentation layer: it is the layer that deals with presentation logic,
 in other way the interaction eith the users.
 So it contains the interfacing and rendering procedures of all system informati
on.
 That layer is also known as application front-end;
\end_layout

\begin_layout Itemize
Application layer: it is the layer that handles all the system functions.
 It also queries the database, in order to infer information, needed to
 build web pages;
\end_layout

\begin_layout Itemize
Data layer: it takes care of information management, using a DBMS software.
\end_layout

\begin_layout Standard
In order to support that layer division, the system will be develop following
 a multi-tier architecture based on five tiers.
\end_layout

\begin_layout Itemize
Tiers of presentation layer:
\end_layout

\begin_deeper
\begin_layout Itemize
Client tier: represented by user's broswer or mobile application;
\end_layout

\begin_layout Itemize
Web server tier: That tier will answer to the HTTP request (GET, POST, etc...)
 from users or PowerEnjoy intranet.
 So it interacts with the script engine to create dynamic web pages, and
 with application server to retrieve data required in order to build pages
 with correct information.
 It also will grant access to static objects and pages;
\end_layout

\begin_layout Itemize
Script engine tier: it takes care of creating dyanamic pages, using JS scripts,
 in order to generate dynamic HTML code.
\end_layout

\end_deeper
\begin_layout Itemize
Application server (tier of application layer): it is the middle tier of
 the system.
 It implements the business logic, following the rules defined by the company.
 That tier have a direct link to the database server;
\end_layout

\begin_layout Itemize
Database server (tier of data layer): it is composed by a DBMS that permit
 ACID propriety of data, and it allows application server to make SQL queries.
\end_layout

\begin_layout Itemize
<TODO: stesso diagramma con DMZ in rosso cosÃ¬ si capisce meglio>
\end_layout

\begin_layout Itemize
<TODO: server farm con due server per ogni tier tranne il client>
\end_layout

\begin_layout Standard
Client tier allows the general user (employee and user) of the system to
 interact with the functionality of PowerEnjoy service.
 The users can access to the system with a common web broswer, or with the
 mobile application.
 The web server contains the structure of the web pages, and it answers
 to the user's requests, generating the pages, using script engine, with
 the proper data, received from the application server.
 There are two ways of interaction between users and system.
 The first one with a modern and up to date web broswer.
 The second one is represetend by the mobile application, which is completely
 derivated from the website, using Phonegap service to transform it in an
 executable file for all the mobile OS nowdays available.
 Due to that, the website will be developed following the principles of
 responsive pages, in order to reduce the amount of code, and increase the
 product quality attributes (as maintainability, performance, portability,
 etc...).
 Furthermore, a responsive design will give to the users of PowerEnjoy system
 a service easy to use and always familiar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Diagrams/Architecture/Architecture_firewall.svg
	scale 30
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Real architecture of 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Hight Level Component View
\end_layout

\begin_layout Subsection
Component View
\end_layout

\begin_layout Subsection
Deployment View
\end_layout

\begin_layout Subsection
Runtime View
\end_layout

\begin_layout Subsubsection
Start the ride - Sequence diagram
\end_layout

\begin_layout Standard
This sequence diagram shows how to an an user (an identified human) could
 reserve a car.
 Tapping or selecting the option 
\begin_inset Quotes eld
\end_inset

Look for car nearby
\begin_inset Quotes erd
\end_inset

, he/she send his position (inserted manually o automatically sent) to the
 system.
 Once arrived to the dispacher, the request is send to the right controller
 (in this case the 
\begin_inset Quotes eld
\end_inset

List controller
\begin_inset Quotes erd
\end_inset

) which ask to the database a list of car available for reservation.
 The user can now visualize the states of these car and chose one of these.
 He/she reserved the car chosen with the suiteted option and, through the
 
\begin_inset Quotes eld
\end_inset

Reservation controller
\begin_inset Quotes erd
\end_inset

 a reservation of this car is created and also, throght the 
\begin_inset Quotes eld
\end_inset

Car controller
\begin_inset Quotes erd
\end_inset

, the phase of this car is put on 
\begin_inset Quotes eld
\end_inset

Reserved
\begin_inset Quotes erd
\end_inset

.
 When the user reachs the car, he/she opens it and the phase of the car
 is now 
\begin_inset Quotes eld
\end_inset

Used
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Finish the ride - Sequence diagram
\end_layout

\begin_layout Standard
This sequence diagram show how to an user (an idenified human) finish his/her
 ride.
 The user turn off the car and then, on the user terminal (in this case
 the screen of the car), he/she selects the option 
\begin_inset Quotes eld
\end_inset

Finish the ride
\begin_inset Quotes erd
\end_inset

.
 The request arrives to the dispatcher and it forwards the request to the
 
\begin_inset Quotes eld
\end_inset

Ride controller
\begin_inset Quotes erd
\end_inset

 which works on the database to updates tables in order to 
\begin_inset Quotes eld
\end_inset

close
\begin_inset Quotes erd
\end_inset

 the ride.
 When the user sees on the user terminal (the screen of the car) that the
 ride is finished, he/she gets out the car and it's sensor send to the system
 a request to close the car.
 The user has one minute to plug the car, after this time expires the applicatio
n server proceeds to compute the final cost of the ride, eventually applying
 discounts, accordig to the various options chosen for this ride.
 The system finaly send a mail with the bill of the ride to the user.
\end_layout

\begin_layout Subsubsection
List of car - Sequence diagram
\end_layout

\begin_layout Standard
This sequence diagram show the utility of the list of car for an employee.
 When the employee arrives at work, he/she has to see the list of car which
 he/she has to take car in the day.
 He/she sends his request to the system and the dispatcher forwards the
 request to the 
\begin_inset Quotes eld
\end_inset

List controller
\begin_inset Quotes erd
\end_inset

, which extracts from the database some cars that need to be checked.
 He/she takes car of the car and then, according to the problems he/she
 has detected during his/her works, he/she changes the state of the car,
 sending the request to the application server.
 The 
\begin_inset Quotes eld
\end_inset

Car controller
\begin_inset Quotes erd
\end_inset

 changes the state of the car in the database and the 
\begin_inset Quotes eld
\end_inset

List of car
\begin_inset Quotes erd
\end_inset

 of the employee is updated.
\end_layout

\begin_layout Subsection
Component Interface
\end_layout

\begin_layout Standard
diagramma e-r
\end_layout

\begin_layout Subsection
Selected Architectural Styles And Patterns
\end_layout

\begin_layout Subsubsection
Protocols
\end_layout

\begin_layout Paragraph
JDBC with ODBC
\end_layout

\begin_layout Standard
This protocolos is used to manage the connection between database and Applicatio
n server (<TODO> spiegare meglio)
\end_layout

\begin_layout Paragraph
RESTful API and JSON 
\end_layout

\begin_layout Standard
Use to manage the connection with the application server.
 because the application server is a JavaEE server, in order to give to
 that server JSON and REST capabilities Jersey framework will be installed.
 
\end_layout

\begin_layout Subsubsection
Design Patterns
\end_layout

\begin_layout Paragraph
MVC with Observable/Observer
\end_layout

\begin_layout Standard
This is the main pattern used in PowerEnjoy system.
 Observable/Observer pattern is used in order to simplify the developing
 of MVC system, and to improve the maintainability.
 In actual fact we can add in future more feature, that perhaps requires
 the same notification that is currently used in the system.
\end_layout

\begin_layout Paragraph
Visitor 
\end_layout

\begin_layout Standard
This pattern is used to make the ListController very dynamic.
 Infact thanks to that pattern the addiction of new type of List is easier
 (go to section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithm-Design"

\end_inset

 to get more specific information about the used of that pattern).
\end_layout

\begin_layout Paragraph
State
\end_layout

\begin_layout Standard
In order to manage the state of car.
 <TODO: parliamo, magari qualcuna ci pensa per davvero.>
\end_layout

\begin_layout Paragraph
Adapter 
\end_layout

\begin_layout Standard
Used in order to make the JavaEE Application server work with Jersey framework
 and consequently with RESTful and JSON, needed in order to build the mobile
 application using PhoneGap.
\end_layout

\begin_layout Standard
<TODO: insomma dovremmo fare un po' di ricerche per capire queste cose,
 poi le servlet e JPA e JDBC boh io ci ho provato.>
\end_layout

\begin_layout Paragraph
Client-Server
\end_layout

\begin_layout Standard
Le solite cazzate
\end_layout

\begin_layout Subsection
Other Design Decision
\end_layout

\begin_layout Standard
Bootstrap 3 is the framework that allows to develop a responsive website
 without create new script function needed to make webpages dinamically
 change based on the dimension and resolution of the screen.
\end_layout

\begin_layout Standard
\noindent
GoogleMap API location will be used in order to integrate the system with
 a map service.
\end_layout

\begin_layout Standard
<TODO:GPS API?????????????>
\end_layout

\begin_layout Section
Algorithm Design
\begin_inset CommandInset label
LatexCommand label
name "sec:Algorithm-Design"

\end_inset


\end_layout

\begin_layout Section
User Interface Design
\end_layout

\begin_layout Subsection
UX diagrams
\end_layout

\begin_layout Standard
In that part of the document is shown what the user interface has to provide
 in PowerEnjoy system.
 There are four diagrams, one for each part of the interaction between general
 users and the system.
\end_layout

\begin_layout Subsection
BCE diagrams
\end_layout

\begin_layout Standard
Here there are four BCE diagrams that are extreamly connected to the UX
 diagrams mentioned before.
 In actual fact, in the diagram are also defined the correspondence between
 boundary and screen.
 Due to the large use of MVC pattern, BCE diagrams is needed in order to
 show how the system's components have to communicate and work together.
 In actual fact, all control tables in the diagrams will become a real controlle
r class of PoweEnjoy system, and all method defined in the entity tables
 must be provided by application server.
\end_layout

\begin_layout Section
Requirements traceability 
\end_layout

\begin_layout Standard
All the decisions in the design of this project have been taken following
 functional and non-functional requirements writtend in the RASD.
 The list under maps the requirements and goals contained in specific sections
 of the RASD to the components in the Design Document which will assure
 its fulfillment.
\end_layout

\begin_layout Itemize
[E1] Allows the employee to log in the system, by app or website 
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\end_deeper
\begin_layout Itemize
[E2] Allows the employee to put the car in unavailable mode 
\end_layout

\begin_deeper
\begin_layout Itemize
Car Controller 
\end_layout

\end_deeper
\begin_layout Itemize
[E3] Allows the employee to know what car he/she has to take care 
\end_layout

\begin_deeper
\begin_layout Itemize
List Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U1] Allows user to create an account 
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U2] Allows user to log in the System, by application or website 
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\begin_layout Itemize
Mobile application and website
\end_layout

\end_deeper
\begin_layout Itemize
[U3] Allows user to modify his/her credentials
\end_layout

\begin_deeper
\begin_layout Itemize
Account Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U4] Allows user to look for cars nearby 
\end_layout

\begin_deeper
\begin_layout Itemize
Reservation Controller
\end_layout

\begin_layout Itemize
List Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U5] Allows user to reserve a car 
\end_layout

\begin_deeper
\begin_layout Itemize
Reservation Controller
\end_layout

\begin_layout Itemize
Car Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U6] Allows user to send a request for opening the car 
\end_layout

\begin_deeper
\begin_layout Itemize
Mobile application
\end_layout

\begin_layout Itemize
Car Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U7] Allows user to enable the money saving option 
\end_layout

\begin_deeper
\begin_layout Itemize
TODO
\end_layout

\end_deeper
\begin_layout Itemize
[U8] Allows user to finish his/her ride and visualize the information about
 it 
\end_layout

\begin_deeper
\begin_layout Itemize
Screen of Car
\end_layout

\begin_layout Itemize
Ride Controller
\end_layout

\begin_layout Itemize
Car Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U9] Allows user to view the special parking area in the map 
\end_layout

\begin_deeper
\begin_layout Itemize
Screen of car 
\end_layout

\begin_layout Itemize
List Controller
\end_layout

\end_deeper
\begin_layout Itemize
[U10] Allows user to pay for the ride
\end_layout

\begin_deeper
\begin_layout Itemize
Payment Controller
\end_layout

\begin_layout Itemize
Ride Controller
\end_layout

\end_deeper
\begin_layout Section
House Of Work
\end_layout

\begin_layout Section
Changelog
\end_layout

\end_body
\end_document
